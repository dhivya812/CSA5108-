#include <stdio.h>
#include <ctype.h>

int gcd(int a, int b) {
    return b == 0 ? a : gcd(b, a % b);
}

char affineEncryptChar(char ch, int a, int b) {
    if (isalpha(ch)) {
        char offset = isupper(ch) ? 'A' : 'a';
        return ((a * (ch - offset) + b) % 26) + offset;
    }
    return ch;
}

void affineEncrypt(char* plaintext, int a, int b) {
    if (gcd(a, 26) != 1) {
        printf("Invalid 'a' value: Not coprime with 26.\n");
        return;
    }
    for (int i = 0; plaintext[i]; i++) {
        plaintext[i] = affineEncryptChar(plaintext[i], a, b);
    }
}

int main() {
    char text[100];
    int a, b;

    printf("Enter plaintext: ");
    fgets(text, sizeof(text), stdin);

    printf("Enter key (a and b): ");
    scanf("%d %d", &a, &b);

    affineEncrypt(text, a, b);
    printf("Encrypted text: %s\n", text);
    return 0;
}
