#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

char matrix[SIZE][SIZE];

void generateMatrix(char *key) {
    int used[26] = {0};
    int i, j, k = 0;
    char ch;

    // Replace 'J' with 'I'
    for (i = 0; key[i]; i++) {
        if (toupper(key[i]) == 'J') {
            key[i] = 'I';
        }
    }

    // Fill matrix with key
    for (i = 0; i < SIZE && k < strlen(key); ) {
        ch = toupper(key[k++]);
        if (isalpha(ch) && !used[ch - 'A']) {
            matrix[i / SIZE][i % SIZE] = ch;
            used[ch - 'A'] = 1;
            i++;
        }
    }

    // Fill remaining letters
    for (ch = 'A'; ch <= 'Z'; ch++) {
        if (ch == 'J') continue;
        if (!used[ch - 'A']) {
            matrix[i / SIZE][i % SIZE] = ch;
            used[ch - 'A'] = 1;
            i++;
        }
    }
}

void findPosition(char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I';
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void decrypt(char *ciphertext) {
    int i, row1, col1, row2, col2;
    char ch1, ch2;

    for (i = 0; i < strlen(ciphertext); i += 2) {
        ch1 = toupper(ciphertext[i]);
        ch2 = toupper(ciphertext[i + 1]);

        findPosition(ch1, &row1, &col1);
        findPosition(ch2, &row2, &col2);

        if (row1 == row2) {
            printf("%c%c", matrix[row1][(col1 + SIZE - 1) % SIZE], matrix[row2][(col2 + SIZE - 1) % SIZE]);
        } else if (col1 == col2) {
            printf("%c%c", matrix[(row1 + SIZE - 1) % SIZE][col1], matrix[(row2 + SIZE - 1) % SIZE][col2]);
        } else {
            printf("%c%c", matrix[row1][col2], matrix[row2][col1]);
        }
    }
    printf("\n");
}

int main() {
    char key[100], ciphertext[1000];

    printf("Enter the key: ");
    scanf("%s", key);
    getchar(); // Consume newline

    printf("Enter the ciphertext (in pairs): ");
    fgets(ciphertext, sizeof(ciphertext), stdin);

    generateMatrix(key);
    printf("Decrypted text: ");
    decrypt(ciphertext);

    return 0;
}
