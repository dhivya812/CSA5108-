#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

char matrix[SIZE][SIZE] = {
    {'M', 'F', 'H', 'I', 'K'},
    {'U', 'N', 'O', 'P', 'Q'},
    {'Z', 'V', 'W', 'X', 'Y'},
    {'E', 'L', 'A', 'R', 'G'},
    {'D', 'S', 'T', 'B', 'C'}
};

void findPosition(char ch, int *row, int *col) {
    int i, j;
    if (ch == 'J') ch = 'I';
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void prepareText(char *plaintext, char *prepared) {
    int i, j = 0;
    char ch1, ch2;

    for (i = 0; i < strlen(plaintext); i++) {
        if (isalpha(plaintext[i])) {
            prepared[j++] = toupper(plaintext[i]);
        }
    }
    prepared[j] = '\0';

    // Insert 'X' between duplicate letters in a pair
    for (i = 0; i < j; i += 2) {
        if (prepared[i] == prepared[i + 1]) {
            for (int k = j; k > i + 1; k--) {
                prepared[k] = prepared[k - 1];
            }
            prepared[i + 1] = 'X';
            j++;
        }
    }

    // If length is odd, add 'X' at the end
    if (j % 2 != 0) {
        prepared[j++] = 'X';
        prepared[j] = '\0';
    }
}

void encrypt(char *plaintext) {
    int i, row1, col1, row2, col2;
    char ch1, ch2, prepared[1000];

    prepareText(plaintext, prepared);

    for (i = 0; i < strlen(prepared); i += 2) {
        ch1 = prepared[i];
        ch2 = prepared[i + 1];

        findPosition(ch1, &row1, &col1);
        findPosition(ch2, &row2, &col2);

        if (row1 == row2) {
            printf("%c%c", matrix[row1][(col1 + 1) % SIZE], matrix[row2][(col2 + 1) % SIZE]);
        } else if (col1 == col2) {
            printf("%c%c", matrix[(row1 + 1) % SIZE][col1], matrix[(row2 + 1) % SIZE][col2]);
        } else {
            printf("%c%c", matrix[row1][col2], matrix[row2][col1]);
        }
    }
    printf("\n");
}

int main() {
    char plaintext[1000];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Encrypted text: ");
    encrypt(plaintext);

    return 0;
}
